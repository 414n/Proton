From 49cee05db3bbec90879588b052c8e82386430e99 Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Tue, 1 May 2018 15:06:30 -0500
Subject: [PATCH] wined3d: Support retrieving depth texture in GL texture
 callback

---
 dlls/d3d11/texture.c             | 20 +++++++++++++++++---
 dlls/wined3d/cs.c                | 14 ++++++++++++--
 dlls/wined3d/texture.c           |  7 ++++---
 dlls/wined3d/wined3d_private.h   |  3 ++-
 include/wine/wined3d-interop.idl |  4 ++--
 include/wine/wined3d.h           |  4 ++--
 6 files changed, 39 insertions(+), 13 deletions(-)

diff --git a/dlls/d3d11/texture.c b/dlls/d3d11/texture.c
index bf6fd4e8b9d..58a7633f78c 100644
--- a/dlls/d3d11/texture.c
+++ b/dlls/d3d11/texture.c
@@ -719,14 +719,28 @@ static void STDMETHODCALLTYPE d3d11_texture2d_GetDesc(IWineD3D11Texture2D *iface
 }
 
 static void STDMETHODCALLTYPE d3d11_texture2d_access_gl_texture(IWineD3D11Texture2D *iface,
-        gl_texture_callback callback, const void *data, unsigned int size)
+        gl_texture_callback callback, IUnknown *depth_unk, const void *data, unsigned int size)
 {
-    struct d3d_texture2d *texture = impl_from_IWineD3D11Texture2D(iface);
+    struct d3d_texture2d *texture = impl_from_IWineD3D11Texture2D(iface), *depth_tex = NULL;
+    IWineD3D11Texture2D *depth_d3d11 = NULL;
 
     TRACE("iface %p, callback %p, data %p, size %u.\n", iface, callback, data, size);
 
     wined3d_mutex_lock();
-    wined3d_access_gl_texture(texture->wined3d_texture, callback, data, size);
+
+    if (depth_unk)
+    {
+        HRESULT hr;
+        hr = IUnknown_QueryInterface(depth_unk, &IID_IWineD3D11Texture2D, (void**)&depth_d3d11);
+        if(hr == S_OK)
+            depth_tex = impl_from_IWineD3D11Texture2D(depth_d3d11);
+    }
+
+    wined3d_access_gl_texture(texture->wined3d_texture, callback, depth_tex ? depth_tex->wined3d_texture : NULL, data, size);
+
+    if (depth_d3d11)
+        IWineD3D11Texture2D_Release(depth_d3d11);
+
     wined3d_mutex_unlock();
 }
 
diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index abfcf3f9404..5a204693abb 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -446,6 +446,7 @@ struct wined3d_cs_gl_texture_callback
 {
     enum wined3d_cs_op opcode;
     struct wined3d_texture *texture;
+    struct wined3d_texture *depth_texture;
     wined3d_gl_texture_callback callback;
     unsigned int data_size;
     BYTE data[1];
@@ -2525,6 +2526,7 @@ static void wined3d_cs_exec_gl_texture_callback(struct wined3d_cs *cs, const voi
 {
     const struct wined3d_cs_gl_texture_callback *op = data;
     struct wined3d_texture_gl *texture = wined3d_texture_gl(op->texture);
+    struct wined3d_texture_gl *depth_texture = wined3d_texture_gl(op->depth_texture);
     const struct wined3d_gl_info *gl_info;
     struct wined3d_context *context;
 
@@ -2532,8 +2534,12 @@ static void wined3d_cs_exec_gl_texture_callback(struct wined3d_cs *cs, const voi
     gl_info = context->gl_info;
 
     wined3d_texture_load_location(&texture->t, 0, context, WINED3D_LOCATION_TEXTURE_RGB);
+    if (depth_texture)
+        wined3d_texture_load_location(&depth_texture->t, 0, context, WINED3D_LOCATION_TEXTURE_RGB);
 
-    op->callback(texture->texture_rgb.name, op->data, op->data_size);
+    op->callback(texture->texture_rgb.name,
+            depth_texture ? depth_texture->texture_rgb.name : 0,
+            op->data, op->data_size);
 
     context_invalidate_compute_state(context, STATE_COMPUTE_SHADER_RESOURCE_BINDING);
     context_invalidate_state(context, STATE_GRAPHICS_SHADER_RESOURCE_BINDING);
@@ -2542,17 +2548,21 @@ static void wined3d_cs_exec_gl_texture_callback(struct wined3d_cs *cs, const voi
 
     context_release(context);
 
+    if (depth_texture)
+        wined3d_resource_release(&depth_texture->t.resource);
     wined3d_resource_release(&texture->t.resource);
 }
 
 void wined3d_cs_emit_gl_texture_callback(struct wined3d_cs *cs, struct wined3d_texture *texture,
-        wined3d_gl_texture_callback callback, const void *data, unsigned int size)
+        wined3d_gl_texture_callback callback, struct wined3d_texture *depth_texture,
+        const void *data, unsigned int size)
 {
     struct wined3d_cs_gl_texture_callback *op;
 
     op = cs->ops->require_space(cs, sizeof(*op) + size, WINED3D_CS_QUEUE_DEFAULT);
     op->opcode = WINED3D_CS_OP_GL_TEXTURE_CALLBACK;
     op->texture = texture;
+    op->depth_texture = depth_texture;
     op->callback = callback;
     op->data_size = size;
     memcpy(op->data, data, size);
diff --git a/dlls/wined3d/texture.c b/dlls/wined3d/texture.c
index a881134f31a..7ecaed1a038 100644
--- a/dlls/wined3d/texture.c
+++ b/dlls/wined3d/texture.c
@@ -3866,11 +3866,12 @@ void wined3d_texture_download_from_texture(struct wined3d_texture *dst_texture,
 }
 
 void CDECL wined3d_access_gl_texture(struct wined3d_texture *texture,
-        wined3d_gl_texture_callback callback, const void *data, unsigned int size)
+        wined3d_gl_texture_callback callback, struct wined3d_texture *depth_texture,
+        const void *data, unsigned int size)
 {
     struct wined3d_device *device = texture->resource.device;
 
-    TRACE("texture %p, callback %p, data %p, size %u.\n", texture, callback, data, size);
+    TRACE("texture %p, depth_texture %p, callback %p, data %p, size %u.\n", texture, depth_texture, callback, data, size);
 
-    wined3d_cs_emit_gl_texture_callback(device->cs, texture, callback, data, size);
+    wined3d_cs_emit_gl_texture_callback(device->cs, texture, callback, depth_texture, data, size);
 }
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index ada8c90f422..50897f29271 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -3804,7 +3804,8 @@ static inline void wined3d_cs_finish(struct wined3d_cs *cs, enum wined3d_cs_queu
 }
 
 void wined3d_cs_emit_gl_texture_callback(struct wined3d_cs *cs, struct wined3d_texture *texture,
-        wined3d_gl_texture_callback callback, const void *data, unsigned int size) DECLSPEC_HIDDEN;
+        wined3d_gl_texture_callback callback, struct wined3d_texture *depth_texture,
+        const void *data, unsigned int size) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_user_callback(struct wined3d_cs *cs,
         wined3d_cs_callback callback, const void *data, unsigned int size) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_wait_idle(struct wined3d_cs *cs) DECLSPEC_HIDDEN;
diff --git a/include/wine/wined3d-interop.idl b/include/wine/wined3d-interop.idl
index 6f8ea3770e3..c5395ccc0ed 100644
--- a/include/wine/wined3d-interop.idl
+++ b/include/wine/wined3d-interop.idl
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  */
 
-typedef void (__cdecl *gl_texture_callback)(unsigned int gl_texture, const void *data, unsigned int data_size);
+typedef void (__cdecl *gl_texture_callback)(unsigned int gl_texture, unsigned int gl_depth_texture, const void *data, unsigned int data_size);
 
 import "d3d11.idl";
 
@@ -27,7 +27,7 @@ import "d3d11.idl";
 ]
 interface IWineD3D11Texture2D : ID3D11Texture2D
 {
-    void access_gl_texture(gl_texture_callback callback, const void *data, unsigned int data_size);
+    void access_gl_texture(gl_texture_callback callback, IUnknown *depth_texture, const void *data, unsigned int data_size);
 }
 
 typedef void (__cdecl *user_cs_callback)(const void *data, unsigned int data_size);
diff --git a/include/wine/wined3d.h b/include/wine/wined3d.h
index 8d4142e2519..4754901265f 100644
--- a/include/wine/wined3d.h
+++ b/include/wine/wined3d.h
@@ -2753,10 +2753,10 @@ ULONG __cdecl wined3d_vertex_declaration_incref(struct wined3d_vertex_declaratio
 HRESULT __cdecl wined3d_extract_shader_input_signature_from_dxbc(struct wined3d_shader_signature *signature,
         const void *byte_code, SIZE_T byte_code_size);
 
-typedef void (__cdecl *wined3d_gl_texture_callback)(unsigned int gl_texture, const void *data, unsigned int size);
+typedef void (__cdecl *wined3d_gl_texture_callback)(unsigned int gl_texture, unsigned int gl_depth_texture, const void *data, unsigned int size);
 
 void __cdecl wined3d_access_gl_texture(struct wined3d_texture *texture,
-        wined3d_gl_texture_callback callback, const void *data, unsigned int size);
+        wined3d_gl_texture_callback callback, struct wined3d_texture *depth_texture, const void *data, unsigned int size);
 
 typedef void (__cdecl *wined3d_cs_callback)(const void *data, unsigned int size);
 
