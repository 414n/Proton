diff --git a/server/sock.c b/server/sock.c
index 1a53ce4b09..8c8eb086ac 100644
--- a/server/sock.c
+++ b/server/sock.c
@@ -663,8 +663,12 @@ static struct object *create_socket( int family, int type, int protocol, unsigne
     sockfd = socket( family, type, protocol );
     if (sockfd == -1)
     {
+        set_win32_error( sock_get_error( errno ));
+#if defined (linux)
         if (errno == EINVAL) set_win32_error( WSAESOCKTNOSUPPORT );
-        else set_win32_error( sock_get_error( errno ));
+#elif defined (__FreeBSD__) || defined(__FreeBSD_kernel__)
+        if (errno == EPROTOTYPE) set_win32_error( WSAESOCKTNOSUPPORT );
+#endif
         return NULL;
     }
     fcntl(sockfd, F_SETFL, O_NONBLOCK); /* make socket nonblocking */

diff --git a/dlls/ws2_32/tests/sock.c b/dlls/ws2_32/tests/sock.c
index 8de3bc45bd..e773aeb8af 100644
--- a/dlls/ws2_32/tests/sock.c
+++ b/dlls/ws2_32/tests/sock.c
@@ -1457,6 +1457,9 @@ static void test_set_getsockopt(void)
     value = 0xdeadbeef;
     err = getsockopt(s, SOL_SOCKET, SO_SNDBUF, (char *)&value, &size);
     ok( !err, "getsockopt(SO_SNDBUF) failed error: %u\n", WSAGetLastError() );
+#if defined(linux)
+todo_wine
+#endif
     ok( value == 4096, "expected 4096, got %u\n", value );
 
     /* SO_RCVBUF */
@@ -1467,6 +1470,9 @@ static void test_set_getsockopt(void)
     value = 0xdeadbeef;
     err = getsockopt(s, SOL_SOCKET, SO_RCVBUF, (char *)&value, &size);
     ok( !err, "getsockopt(SO_RCVBUF) failed error: %u\n", WSAGetLastError() );
+#if defined(linux)
+todo_wine
+#endif
     ok( value == 4096, "expected 4096, got %u\n", value );
 
     /* SO_LINGER */
diff --git a/dlls/ws2_32/tests/sock.c b/dlls/ws2_32/tests/sock.c
index 6ee50d94b6..1a3eba529e 100644
--- a/dlls/ws2_32/tests/sock.c
+++ b/dlls/ws2_32/tests/sock.c
@@ -1688,30 +1688,58 @@ todo_wine
         err = setsockopt(s, IPPROTO_IP, IP_HDRINCL, (char *) &k, size);
         if (err == -1) /* >= Vista */
         {
-            todo_wine {
+#if defined(linux)
+todo_wine
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+todo_wine_if (prottest[i].family == AF_INET)
+#endif
             ok(GetLastError() == WSAEINVAL, "Expected 10022, got %d\n", GetLastError());
             k = 99;
             SetLastError(0xdeadbeef);
             err = getsockopt(s, IPPROTO_IP, IP_HDRINCL, (char *) &k, &size);
+#if defined(linux)
+todo_wine
+#endif
             ok(err == -1, "Expected -1, got %d\n", err);
+#if defined(linux)
+todo_wine
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+todo_wine_if (prottest[i].family == AF_INET)
+#endif
             ok(GetLastError() == WSAEINVAL, "Expected 10022, got %d\n", GetLastError());
+#if defined(linux)
+todo_wine
+#endif
             ok(k == 99, "Expected 99, got %d\n", k);
 
             size = sizeof(k);
             k = 0;
             SetLastError(0xdeadbeef);
             err = setsockopt(s, IPPROTO_IP, IP_HDRINCL, (char *) &k, size);
-            }
             ok(err == -1, "Expected -1, got %d\n", err);
-            todo_wine {
+#if defined(linux)
+todo_wine
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+todo_wine_if (prottest[i].family == AF_INET)
+#endif
             ok(GetLastError() == WSAEINVAL, "Expected 10022, got %d\n", GetLastError());
             k = 99;
             SetLastError(0xdeadbeef);
             err = getsockopt(s, IPPROTO_IP, IP_HDRINCL, (char *) &k, &size);
+#if defined(linux)
+todo_wine
+#endif
             ok(err == -1, "Expected -1, got %d\n", err);
+#if defined(linux)
+todo_wine
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
+todo_wine_if (prottest[i].family == AF_INET)
+#endif
             ok(GetLastError() == WSAEINVAL, "Expected 10022, got %d\n", GetLastError());
+#if defined(linux)
+todo_wine
+#endif
             ok(k == 99, "Expected 99, got %d\n", k);
-            }
         }
         else /* <= 2003 the tests differ between TCP and UDP, UDP silently accepts */
         {

diff --git a/dlls/ws2_32/tests/sock.c b/dlls/ws2_32/tests/sock.c
index 1a3eba529e..09ec356834 100644
--- a/dlls/ws2_32/tests/sock.c
+++ b/dlls/ws2_32/tests/sock.c
@@ -712,7 +712,10 @@ static VOID WINAPI oob_server ( server_params *par )
     do_synchronous_recv ( mem->sock[0].s, mem->sock[0].buf, n_expected, 0, par->buflen );
 
     ioctlsocket ( mem->sock[0].s, SIOCATMARK, &atmark );
-    todo_wine ok ( atmark == 0, "oob_server (%x): not at the OOB mark: %i\n", id, atmark );
+#if defined(linux)
+todo_wine
+#endif
+    ok ( atmark == 0, "oob_server (%x): not at the OOB mark: %i\n", id, atmark );
 
     /* cleanup */
     wsa_ok ( closesocket ( mem->sock[0].s ),  0 ==, "oob_server (%x): closesocket error: %d\n" );
