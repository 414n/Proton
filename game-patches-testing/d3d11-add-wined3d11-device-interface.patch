From fdb6a5f0385850765335bbe312ad188a3e8ebe51 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B3zef=20Kucia?= <joseph.kucia@gmail.com>
Date: Wed, 4 Apr 2018 17:05:37 +0200
Subject: [PATCH] d3d11: Add IWineD3D11Device interface.

---
 dlls/d3d11/d3d11_private.h       |  1 +
 dlls/d3d11/device.c              | 52 ++++++++++++++++++++++++++++++++
 include/wine/wined3d-interop.idl | 12 ++++++++
 3 files changed, 65 insertions(+)

diff --git a/dlls/d3d11/d3d11_private.h b/dlls/d3d11/d3d11_private.h
index 7b1c8c91f87..9364a6304a2 100644
--- a/dlls/d3d11/d3d11_private.h
+++ b/dlls/d3d11/d3d11_private.h
@@ -515,6 +515,7 @@ struct d3d_device
     ID3D10Multithread ID3D10Multithread_iface;
     IWineDXGIDeviceParent IWineDXGIDeviceParent_iface;
     IUnknown *outer_unk;
+    IWineD3D11Device IWineD3D11Device_iface;
     LONG refcount;
 
     D3D_FEATURE_LEVEL feature_level;
diff --git a/dlls/d3d11/device.c b/dlls/d3d11/device.c
index ad5bfa985c3..9a261c54588 100644
--- a/dlls/d3d11/device.c
+++ b/dlls/d3d11/device.c
@@ -2813,6 +2813,53 @@ static ULONG STDMETHODCALLTYPE d3d11_device_Release(ID3D11Device2 *iface)
     return IUnknown_Release(device->outer_unk);
 }
 
+/* IWineD3D11Device methods */
+
+static inline struct d3d_device *impl_from_IWineD3D11Device(IWineD3D11Device *iface)
+{
+    return CONTAINING_RECORD(iface, struct d3d_device, IWineD3D11Device_iface);
+}
+
+static HRESULT STDMETHODCALLTYPE wine_device_QueryInterface(IWineD3D11Device *iface, REFIID riid, void **out)
+{
+    struct d3d_device *device = impl_from_IWineD3D11Device(iface);
+    return IUnknown_QueryInterface(device->outer_unk, riid, out);
+}
+
+static ULONG STDMETHODCALLTYPE wine_device_AddRef(IWineD3D11Device *iface)
+{
+    struct d3d_device *device = impl_from_IWineD3D11Device(iface);
+    return IUnknown_AddRef(device->outer_unk);
+}
+
+static ULONG STDMETHODCALLTYPE wine_device_Release(IWineD3D11Device *iface)
+{
+    struct d3d_device *device = impl_from_IWineD3D11Device(iface);
+    return IUnknown_Release(device->outer_unk);
+}
+
+static void STDMETHODCALLTYPE wine_device_run_on_command_stream(IWineD3D11Device *iface,
+        user_cs_callback callback, const void *data, unsigned int data_size)
+{
+    struct d3d_device *device = impl_from_IWineD3D11Device(iface);
+
+    TRACE("iface %p, callback %p, data %p, data_size %u.\n", iface, callback, data, data_size);
+
+    wined3d_mutex_lock();
+    wined3d_device_run_cs_callback(device->wined3d_device, callback, data, data_size);
+    wined3d_mutex_unlock();
+}
+
+static const struct IWineD3D11DeviceVtbl wine_device_vtbl =
+{
+    /* IUnknown methods */
+    wine_device_QueryInterface,
+    wine_device_AddRef,
+    wine_device_Release,
+    /* IWineD3D11Device methods */
+    wine_device_run_on_command_stream,
+};
+
 static HRESULT STDMETHODCALLTYPE d3d11_device_CreateBuffer(ID3D11Device2 *iface, const D3D11_BUFFER_DESC *desc,
         const D3D11_SUBRESOURCE_DATA *data, ID3D11Buffer **buffer)
 {
@@ -3840,6 +3887,10 @@ static HRESULT STDMETHODCALLTYPE d3d_device_inner_QueryInterface(IUnknown *iface
     {
         *out = &device->IWineDXGIDeviceParent_iface;
     }
+    else if (IsEqualGUID(riid, &IID_IWineD3D11Device))
+    {
+        *out = &device->IWineD3D11Device_iface;
+    }
     else
     {
         WARN("%s not implemented, returning E_NOINTERFACE.\n", debugstr_guid(riid));
@@ -6182,6 +6233,7 @@ void d3d_device_init(struct d3d_device *device, void *outer_unknown)
     device->ID3D10Device1_iface.lpVtbl = &d3d10_device1_vtbl;
     device->ID3D10Multithread_iface.lpVtbl = &d3d10_multithread_vtbl;
     device->IWineDXGIDeviceParent_iface.lpVtbl = &d3d_dxgi_device_parent_vtbl;
+    device->IWineD3D11Device_iface.lpVtbl = &wine_device_vtbl;
     device->device_parent.ops = &d3d_wined3d_device_parent_ops;
     device->refcount = 1;
     /* COM aggregation always takes place */
diff --git a/include/wine/wined3d-interop.idl b/include/wine/wined3d-interop.idl
index 884baf958c2..d5c91623b3c 100644
--- a/include/wine/wined3d-interop.idl
+++ b/include/wine/wined3d-interop.idl
@@ -29,3 +29,15 @@ interface IWineD3D11Texture2D : ID3D11Texture2D
 {
     void access_gl_texture(gl_texture_callback callback, const void *data, unsigned int data_size);
 }
+
+typedef void (__cdecl *user_cs_callback)(const void *data, unsigned int data_size);
+
+[
+    object,
+    local,
+    uuid(8f02de7e-d55d-457b-9423-83456e49c58a)
+]
+interface IWineD3D11Device : IUnknown
+{
+    void run_on_command_stream(user_cs_callback callback, const void *data, unsigned int data_size);
+}
