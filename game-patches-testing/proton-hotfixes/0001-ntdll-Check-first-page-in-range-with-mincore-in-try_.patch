From d28490dfc234c48fff16677b014d77dc605347a6 Mon Sep 17 00:00:00 2001
From: Paul Gofman <gofmanp@gmail.com>
Date: Tue, 14 Jan 2020 21:36:52 +0300
Subject: [PATCH 1/5] ntdll: Check first page in range with mincore() in
 try_map_free_area() before trying to map the range.

Signed-off-by: Paul Gofman <gofmanp@gmail.com>
---
 dlls/ntdll/virtual.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/virtual.c b/dlls/ntdll/virtual.c
index 26452992ef..de11795f36 100644
--- a/dlls/ntdll/virtual.c
+++ b/dlls/ntdll/virtual.c
@@ -591,15 +591,20 @@ static struct wine_rb_entry *find_view_inside_range( void **base_ptr, void **end
 static void* try_map_free_area( void *base, void *end, ptrdiff_t step,
                                 void *start, size_t size, int unix_prot )
 {
+    static unsigned char vec;
     void *ptr;
 
     while (start && base <= start && (char*)start + size <= (char*)end)
     {
-        if ((ptr = wine_anon_mmap( start, size, unix_prot, 0 )) == start)
+        if (!mincore(start, page_size, &vec))
+        {
+            ptr = NULL;
+        }
+        else if ((ptr = wine_anon_mmap( start, size, unix_prot, 0 )) == start)
+        {
             return start;
-        TRACE( "Found free area is already mapped, start %p.\n", start );
-
-        if (ptr == (void *)-1)
+        }
+        else if (ptr == (void *)-1)
         {
             ERR("wine_anon_mmap() error %s, start %p, size %p, unix_prot %#x.\n",
                     strerror(errno), start, (void *)size, unix_prot);
@@ -610,6 +615,8 @@ static void* try_map_free_area( void *base, void *end, ptrdiff_t step,
             munmap( ptr, size );
         }
 
+        TRACE( "Found free area is already mapped, start %p, ptr %p.\n", start, ptr );
+
         if ((step > 0 && (char *)end - (char *)start < step) ||
             (step < 0 && (char *)start - (char *)base < -step) ||
             step == 0)
-- 
2.24.1

